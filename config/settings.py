"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

import os
from dotenv import load_dotenv
import dj_database_url

# Charger les variables dâ€™environnement
load_dotenv()

# Pour la version Option 1 (directe)
# DATABASES = {
#     'default': dj_database_url.config(
#         default=os.getenv('SUPABASE_DB_URL'),
#         conn_max_age=600
#     ),
# }

# Pour la version Option 2 (IPv4 session pooler), on peut construire manuellement l'URL :
DATABASES = {
    'default': dj_database_url.config(
        default=f"postgresql://{os.getenv('user')}:{os.getenv('password')}"
                f"@{os.getenv('host')}:{os.getenv('SUPABASE_DB_PORT')}/{os.getenv('dbname')}",
        conn_max_age=600
    ),
}

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# ðŸ“Œ Utilisation des variables d'environnement pour la clÃ© secrÃ¨te et le mode DEBUG
SECRET_KEY = os.getenv("SECRET_KEY", "django-insecure-))09u0gey)evwq7k7k1rdg(dq7boh*ypli7@@=(6mc&q47ah29")

# ðŸ“Œ DÃ©sactivation du mode DEBUG en production
DEBUG = os.getenv("DEBUG", "False") == "True"

# ðŸ“Œ Autorisation des domaines pour Railway et Render
ALLOWED_HOSTS = os.getenv("ALLOWED_HOSTS", "*").split(",")


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-))09u0gey)evwq7k7k1rdg(dq7boh*ypli7@@=(6mc&q47ah29"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",

     # Apps
    "api",
    'authentication',

    # Django REST Framework
    "rest_framework",
    "corsheaders",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "corsheaders.middleware.CorsMiddleware",  # Ajout du middleware CORS
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "config.urls"
CORS_ALLOW_ALL_ORIGINS = True  # Autoriser toutes les origines
CORS_ALLOW_CREDENTIALS = True  # Autoriser les cookies
CORS_ALLOWED_ORIGINS = ["http://localhost:3000"]  # Autoriser les requÃªtes depuis cette origine
CORS_ALLOW_HEADERS = ["content-type", "Authorization"]  # Autoriser ces en-tÃªtes
CORS_ALLOW_METHODS = ["DELETE", "GET", "OPTIONS", "PATCH", "POST", "PUT"]  # Autoriser ces mÃ©thodes


TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "config.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases




# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
